// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// logdmultinomCPP
double logdmultinomCPP(arma::imat x, double size, arma::mat prob);
RcppExport SEXP _cmult_joint_dev_logdmultinomCPP(SEXP xSEXP, SEXP sizeSEXP, SEXP probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::imat >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type prob(probSEXP);
    rcpp_result_gen = Rcpp::wrap(logdmultinomCPP(x, size, prob));
    return rcpp_result_gen;
END_RCPP
}
// optim_rcpp
Rcpp::List optim_rcpp(arma::vec& params, const arma::mat& X1, const arma::mat& X2, const Rcpp::StringVector& tau_params, const int& nsurvey, const arma::cube& Yarray, const arma::mat& tarray, const arma::mat& rarray, const arma::ivec& nrint, const arma::ivec& ntint, const arma::vec& max_r, const arma::ivec& Ysum, const arma::vec& nlimit, const Rcpp::String method);
RcppExport SEXP _cmult_joint_dev_optim_rcpp(SEXP paramsSEXP, SEXP X1SEXP, SEXP X2SEXP, SEXP tau_paramsSEXP, SEXP nsurveySEXP, SEXP YarraySEXP, SEXP tarraySEXP, SEXP rarraySEXP, SEXP nrintSEXP, SEXP ntintSEXP, SEXP max_rSEXP, SEXP YsumSEXP, SEXP nlimitSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X2(X2SEXP);
    Rcpp::traits::input_parameter< const Rcpp::StringVector& >::type tau_params(tau_paramsSEXP);
    Rcpp::traits::input_parameter< const int& >::type nsurvey(nsurveySEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type Yarray(YarraySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type tarray(tarraySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type rarray(rarraySEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type nrint(nrintSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type ntint(ntintSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type max_r(max_rSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type Ysum(YsumSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type nlimit(nlimitSEXP);
    Rcpp::traits::input_parameter< const Rcpp::String >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(optim_rcpp(params, X1, X2, tau_params, nsurvey, Yarray, tarray, rarray, nrint, ntint, max_r, Ysum, nlimit, method));
    return rcpp_result_gen;
END_RCPP
}
// runit
int runit(int k, arma::cube Yarray, Rcpp::NumericVector nrint, Rcpp::NumericVector ntint);
RcppExport SEXP _cmult_joint_dev_runit(SEXP kSEXP, SEXP YarraySEXP, SEXP nrintSEXP, SEXP ntintSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Yarray(YarraySEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type nrint(nrintSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ntint(ntintSEXP);
    rcpp_result_gen = Rcpp::wrap(runit(k, Yarray, nrint, ntint));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_cmult_joint_dev_logdmultinomCPP", (DL_FUNC) &_cmult_joint_dev_logdmultinomCPP, 3},
    {"_cmult_joint_dev_optim_rcpp", (DL_FUNC) &_cmult_joint_dev_optim_rcpp, 14},
    {"_cmult_joint_dev_runit", (DL_FUNC) &_cmult_joint_dev_runit, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_cmult_joint_dev(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
